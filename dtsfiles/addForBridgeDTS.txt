	/**
	 * Retrieves a AppStoreService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getAppStoreServiceProxy(session?: string): AppStoreServiceProxy;

	/**
	 * Retrieves a AsyncMatchService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getAsyncMatchServiceProxy(session?: string): AsyncMatchServiceProxy;

	/**
	 * Retrieves a AuthenticateService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getAuthenticateServiceProxy(session?: string): AuthenticateServiceProxy;

	/**
	 * Retrieves a BlockchainService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getBlockchainServiceProxy(session?: string): BlockchainServiceProxy;

	/**
	 * Retrieves a ChatService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getChatServiceProxy(session?: string): ChatServiceProxy;

	/**
	 * Retrieves a CustomEntityService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getCustomEntityServiceProxy(session?: string): CustomEntityServiceProxy;

	/**
	 * Retrieves a DataStreamService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getDataStreamServiceProxy(session?: string): DataStreamServiceProxy;

	/**
	 * Retrieves a DispatcherService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getDispatcherServiceProxy(session?: string): DispatcherServiceProxy;

	/**
	 * Retrieves a EmailAuthService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getEmailAuthServiceProxy(session?: string): EmailAuthServiceProxy;

	/**
	 * Retrieves a EntityService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getEntityServiceProxy(session?: string): EntityServiceProxy;

	/**
	 * Retrieves a EventService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getEventServiceProxy(session?: string): EventServiceProxy;

	/**
	 * Retrieves a FileService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getFileServiceProxy(session?: string): FileServiceProxy;

	/**
	 * Retrieves a FriendService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getFriendServiceProxy(session?: string): FriendServiceProxy;

	/**
	 * Retrieves a GamificationService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getGamificationServiceProxy(session?: string): GamificationServiceProxy;

	/**
	 * Retrieves a GlobalAppService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getGlobalAppServiceProxy(session?: string): GlobalAppServiceProxy;

	/**
	 * Retrieves a GlobalEntityService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getGlobalEntityServiceProxy(session?: string): GlobalEntityServiceProxy;

	/**
	 * Retrieves a GlobalFileService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getGlobalFileServiceProxy(session?: string): GlobalFileServiceProxy;

	/**
	 * Retrieves a GlobalFileV3Service proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getGlobalFileV3ServiceProxy(session?: string): GlobalFileV3ServiceProxy;

	/**
	 * Retrieves a GlobalGameStatisticsService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getGlobalGameStatisticsServiceProxy(session?: string): GlobalGameStatisticsServiceProxy;

	/**
	 * Retrieves a GroupService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getGroupServiceProxy(session?: string): GroupServiceProxy;

	/**
	 * Retrieves a HttpClientService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getHttpClientServiceProxy(session?: string): HttpClientServiceProxy;

	/**
	 * Retrieves a IdentityService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getIdentityServiceProxy(session?: string): IdentityServiceProxy;

	/**
	 * Retrieves a ItemCatalogService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getItemCatalogServiceProxy(session?: string): ItemCatalogServiceProxy;

	/**
	 * Retrieves a LeaderboardService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getLeaderboardServiceProxy(session?: string): LeaderboardServiceProxy;

	/**
	 * Retrieves a LobbyService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getLobbyServiceProxy(session?: string): LobbyServiceProxy;

	/**
	 * Retrieves a LogService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getLogServiceProxy(session?: string): LogServiceProxy;

	/**
	 * Retrieves a MailService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getMailServiceProxy(session?: string): MailServiceProxy;

	/**
	 * Retrieves a MatchMakingService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getMatchMakingServiceProxy(session?: string): MatchMakingServiceProxy;

	/**
	 * Retrieves a MessagingService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getMessagingServiceProxy(session?: string): MessagingServiceProxy;

	/**
	 * Retrieves a OnewayMatchService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getOnewayMatchServiceProxy(session?: string): OnewayMatchServiceProxy;

	/**
	 * Retrieves a PlaybackStreamService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getPlaybackStreamServiceProxy(session?: string): PlaybackStreamServiceProxy;

	/**
	 * Retrieves a PlayerStateService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getPlayerStateServiceProxy(session?: string): PlayerStateServiceProxy;

	/**
	 * Retrieves a PlayerStatisticsService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getPlayerStatisticsServiceProxy(session?: string): PlayerStatisticsServiceProxy;

	/**
	 * Retrieves a PlayerStatisticsEventService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getPlayerStatisticsEventServiceProxy(session?: string): PlayerStatisticsEventServiceProxy;

	/**
	 * Retrieves a PresenceService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getPresenceServiceProxy(session?: string): PresenceServiceProxy;

	/**
	 * Retrieves a ProductService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getProductServiceProxy(session?: string): ProductServiceProxy;

	/**
	 * Retrieves a ProductManagementService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getProductManagementServiceProxy(session?: string): ProductManagementServiceProxy;

	/**
	 * Retrieves a ProfanityService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getProfanityServiceProxy(session?: string): ProfanityServiceProxy;

	/**
	 * Retrieves a PromotionsService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getPromotionsServiceProxy(session?: string): PromotionsServiceProxy;

	/**
	 * Retrieves a PushNotificationService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getPushNotificationServiceProxy(session?: string): PushNotificationServiceProxy;

	/**
	 * Retrieves a RTTRegistrationService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getRTTRegistrationServiceProxy(session?: string): RTTRegistrationServiceProxy;

	/**
	 * Retrieves a RedemptionCodeService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getRedemptionCodeServiceProxy(session?: string): RedemptionCodeServiceProxy;

	/**
	 * Retrieves a S2SDispatcherService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getS2SDispatcherServiceProxy(session?: string): S2SDispatcherServiceProxy;

	/**
	 * Retrieves a S3HandlingService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getS3HandlingServiceProxy(session?: string): S3HandlingServiceProxy;

	/**
	 * Retrieves a ScriptService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getScriptServiceProxy(session?: string): ScriptServiceProxy;

	/**
	 * Retrieves a ScriptService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getScriptServiceProxy(session?: string): ScriptServiceProxy;

	/**
	 * Retrieves a SegmentService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getSegmentServiceProxy(session?: string): SegmentServiceProxy;

	/**
	 * Retrieves a TimeService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getTimeServiceProxy(session?: string): TimeServiceProxy;

	/**
	 * Retrieves a TournamentService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getTournamentServiceProxy(session?: string): TournamentServiceProxy;

	/**
	 * Retrieves a TwitterService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getTwitterServiceProxy(session?: string): TwitterServiceProxy;

	/**
	 * Retrieves a UserService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getUserServiceProxy(session?: string): UserServiceProxy;

	/**
	 * Retrieves a UserItemsService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getUserItemsServiceProxy(session?: string): UserItemsServiceProxy;

	/**
	 * Retrieves a VirtualCurrencyService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getVirtualCurrencyServiceProxy(session?: string): VirtualCurrencyServiceProxy;

	/**
	 * Retrieves a AppStoreService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getAppStoreServiceProxy(session?: string): AppStoreServiceProxy;

	/**
	 * Retrieves a AsyncMatchService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getAsyncMatchServiceProxy(session?: string): AsyncMatchServiceProxy;

	/**
	 * Retrieves a AuthenticateService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getAuthenticateServiceProxy(session?: string): AuthenticateServiceProxy;

	/**
	 * Retrieves a BlockchainService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getBlockchainServiceProxy(session?: string): BlockchainServiceProxy;

	/**
	 * Retrieves a ChatService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getChatServiceProxy(session?: string): ChatServiceProxy;

	/**
	 * Retrieves a CustomEntityService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getCustomEntityServiceProxy(session?: string): CustomEntityServiceProxy;

	/**
	 * Retrieves a DataStreamService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getDataStreamServiceProxy(session?: string): DataStreamServiceProxy;

	/**
	 * Retrieves a DispatcherService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getDispatcherServiceProxy(session?: string): DispatcherServiceProxy;

	/**
	 * Retrieves a EmailAuthService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getEmailAuthServiceProxy(session?: string): EmailAuthServiceProxy;

	/**
	 * Retrieves a EntityService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getEntityServiceProxy(session?: string): EntityServiceProxy;

	/**
	 * Retrieves a EventService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getEventServiceProxy(session?: string): EventServiceProxy;

	/**
	 * Retrieves a FileService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getFileServiceProxy(session?: string): FileServiceProxy;

	/**
	 * Retrieves a FriendService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getFriendServiceProxy(session?: string): FriendServiceProxy;

	/**
	 * Retrieves a GamificationService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getGamificationServiceProxy(session?: string): GamificationServiceProxy;

	/**
	 * Retrieves a GlobalAppService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getGlobalAppServiceProxy(session?: string): GlobalAppServiceProxy;

	/**
	 * Retrieves a GlobalEntityService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getGlobalEntityServiceProxy(session?: string): GlobalEntityServiceProxy;

	/**
	 * Retrieves a GlobalFileService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getGlobalFileServiceProxy(session?: string): GlobalFileServiceProxy;

	/**
	 * Retrieves a GlobalFileV3Service proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getGlobalFileV3ServiceProxy(session?: string): GlobalFileV3ServiceProxy;

	/**
	 * Retrieves a GlobalGameStatisticsService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getGlobalGameStatisticsServiceProxy(session?: string): GlobalGameStatisticsServiceProxy;

	/**
	 * Retrieves a GroupService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getGroupServiceProxy(session?: string): GroupServiceProxy;

	/**
	 * Retrieves a HttpClientService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getHttpClientServiceProxy(session?: string): HttpClientServiceProxy;

	/**
	 * Retrieves a IdentityService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getIdentityServiceProxy(session?: string): IdentityServiceProxy;

	/**
	 * Retrieves a ItemCatalogService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getItemCatalogServiceProxy(session?: string): ItemCatalogServiceProxy;

	/**
	 * Retrieves a LeaderboardService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getLeaderboardServiceProxy(session?: string): LeaderboardServiceProxy;

	/**
	 * Retrieves a LobbyService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getLobbyServiceProxy(session?: string): LobbyServiceProxy;

	/**
	 * Retrieves a LogService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getLogServiceProxy(session?: string): LogServiceProxy;

	/**
	 * Retrieves a MailService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getMailServiceProxy(session?: string): MailServiceProxy;

	/**
	 * Retrieves a MatchMakingService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getMatchMakingServiceProxy(session?: string): MatchMakingServiceProxy;

	/**
	 * Retrieves a MessagingService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getMessagingServiceProxy(session?: string): MessagingServiceProxy;

	/**
	 * Retrieves a OnewayMatchService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getOnewayMatchServiceProxy(session?: string): OnewayMatchServiceProxy;

	/**
	 * Retrieves a PlaybackStreamService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getPlaybackStreamServiceProxy(session?: string): PlaybackStreamServiceProxy;

	/**
	 * Retrieves a PlayerStateService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getPlayerStateServiceProxy(session?: string): PlayerStateServiceProxy;

	/**
	 * Retrieves a PlayerStatisticsService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getPlayerStatisticsServiceProxy(session?: string): PlayerStatisticsServiceProxy;

	/**
	 * Retrieves a PlayerStatisticsEventService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getPlayerStatisticsEventServiceProxy(session?: string): PlayerStatisticsEventServiceProxy;

	/**
	 * Retrieves a PresenceService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getPresenceServiceProxy(session?: string): PresenceServiceProxy;

	/**
	 * Retrieves a ProductService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getProductServiceProxy(session?: string): ProductServiceProxy;

	/**
	 * Retrieves a ProductManagementService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getProductManagementServiceProxy(session?: string): ProductManagementServiceProxy;

	/**
	 * Retrieves a ProfanityService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getProfanityServiceProxy(session?: string): ProfanityServiceProxy;

	/**
	 * Retrieves a PromotionsService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getPromotionsServiceProxy(session?: string): PromotionsServiceProxy;

	/**
	 * Retrieves a PushNotificationService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getPushNotificationServiceProxy(session?: string): PushNotificationServiceProxy;

	/**
	 * Retrieves a RTTRegistrationService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getRTTRegistrationServiceProxy(session?: string): RTTRegistrationServiceProxy;

	/**
	 * Retrieves a RedemptionCodeService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getRedemptionCodeServiceProxy(session?: string): RedemptionCodeServiceProxy;

	/**
	 * Retrieves a S2SDispatcherService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getS2SDispatcherServiceProxy(session?: string): S2SDispatcherServiceProxy;

	/**
	 * Retrieves a S3HandlingService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getS3HandlingServiceProxy(session?: string): S3HandlingServiceProxy;

	/**
	 * Retrieves a ScriptService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getScriptServiceProxy(session?: string): ScriptServiceProxy;

	/**
	 * Retrieves a ScriptService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getScriptServiceProxy(session?: string): ScriptServiceProxy;

	/**
	 * Retrieves a SegmentService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getSegmentServiceProxy(session?: string): SegmentServiceProxy;

	/**
	 * Retrieves a TimeService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getTimeServiceProxy(session?: string): TimeServiceProxy;

	/**
	 * Retrieves a TournamentService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getTournamentServiceProxy(session?: string): TournamentServiceProxy;

	/**
	 * Retrieves a TwitterService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getTwitterServiceProxy(session?: string): TwitterServiceProxy;

	/**
	 * Retrieves a UserService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getUserServiceProxy(session?: string): UserServiceProxy;

	/**
	 * Retrieves a UserItemsService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getUserItemsServiceProxy(session?: string): UserItemsServiceProxy;

	/**
	 * Retrieves a VirtualCurrencyService proxy object.
	 * 
	 * @param session A optional parameter for when a script is executed without a session.
	 */ 
	getVirtualCurrencyServiceProxy(session?: string): VirtualCurrencyServiceProxy;

